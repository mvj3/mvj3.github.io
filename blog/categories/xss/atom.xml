<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: XSS | 世界的审美！]]></title>
  <link href="http://mvj3.github.io/blog/categories/xss/atom.xml" rel="self"/>
  <link href="http://mvj3.github.io/"/>
  <updated>2013-12-18T19:05:55+08:00</updated>
  <id>http://mvj3.github.io/</id>
  <author>
    <name><![CDATA[mvj3]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[XSS和CSRF的区别]]></title>
    <link href="http://mvj3.github.io/2013/04/05/the-difference-between-XSS-and-CSRF/"/>
    <updated>2013-04-05T20:22:49+08:00</updated>
    <id>http://mvj3.github.io/2013/04/05/the-difference-between-XSS-and-CSRF</id>
    <content type="html"><![CDATA[<p>XSS 是直接在源网站执行，如常见的如SQL注入和提交JS代码等。解决方法一般为把用户输入都作为不信任数据做转义处理。</p>

<p>CSRF 是破坏者间接利用了用户在源网站登陆情况下，在其他网站诱导用户触发JS请求获取源网站访问授权。Rails里用每次分配随机的 <code>csrf_meta_tag</code> 来解决伪造问题。</p>
]]></content>
  </entry>
  
</feed>
